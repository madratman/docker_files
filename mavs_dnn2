FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu14.04

MAINTAINER Ratnesh Madaan <ratneshmadaan@gmail.com>

#ARG THEANO_VERSION=rel-0.8.2
#ARG KERAS_VERSION=1.0.3
#ARG LASAGNE_VERSION=v0.1

RUN echo -e "\n**********************\nNVIDIA Driver Version\n**********************\n" && \
	cat /proc/driver/nvidia/version && \
	echo -e "\n**********************\nCUDA Version\n**********************\n" && \
	nvcc -V && \
	echo -e "\n\nBuilding your Deep Learning Docker Image...\n"

# Install some dependencies
RUN apt-get update && apt-get install -y \
		bc \
		build-essential \
		cmake \
		curl \
		g++ \
		gfortran \
		git \
		libffi-dev \
		libfreetype6-dev \
		libhdf5-dev \
		libjpeg-dev \
		liblcms2-dev \
		libopenblas-dev \
		liblapack-dev \
		libopenjpeg2 \
		libpng12-dev \
		libssl-dev \
		libtiff5-dev \
		libwebp-dev \
		libzmq3-dev \
		nano \
		pkg-config \
		python-dev \
		software-properties-common \
		unzip \
		vim \
		wget \
		zlib1g-dev \
		&& \
	apt-get clean && \
	apt-get autoremove && \
	rm -rf /var/lib/apt/lists/* && \
# Link BLAS library to use OpenBLAS using the alternatives mechanism (https://www.scipy.org/scipylib/building/linux.html#debian-ubuntu)
	update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3

# Install pip
RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
	python get-pip.py && \
	rm get-pip.py

# Add SNI support to Python
RUN pip --no-cache-dir install \
		pyopenssl \
		ndg-httpsclient \
		pyasn1

# Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary
# especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)
RUN apt-get update && apt-get install -y \
		python-numpy \
		python-scipy \
		python-nose \
		python-h5py \
		python-skimage \
		python-matplotlib \
		python-pandas \
		python-sklearn \
		python-sympy \
		&& \
	apt-get clean && \
	apt-get autoremove && \
	rm -rf /var/lib/apt/lists/*

# Install other useful Python packages using pip
RUN pip --no-cache-dir install --upgrade ipython && \
	pip --no-cache-dir install \
		Cython \
		ipykernel \
		jupyter \
		path.py \
		Pillow \
		pygments \
		six \
		sphinx \
		wheel \
		zmq \
		&& \
	python -m ipykernel.kernelspec

# OpenCV
#RUN pip --no-cache-dir install opencv-python
RUN apt-get update && apt-get install python-opencv -y

# Install Theano and set up Theano config (.theanorc) for CUDA and OpenBLAS
RUN pip --no-cache-dir install git+git://github.com/Theano/Theano.git && \
	\
	echo "[global]\ndevice=gpu\nfloatX=float32\noptimizer_including=cudnn\nmode=FAST_RUN \
		\n[lib]\ncnmem=0.0 \
		\n[nvcc]\nfastmath=True \
		\n[blas]\nldflag = -L/usr/lib/openblas-base -lopenblas \
		\n[DebugMode]\ncheck_finite=1" \
	> /root/.theanorc

# Install Keras
RUN pip --no-cache-dir install git+git://github.com/fchollet/keras.git@${KERAS_VERSION}

# Install Lasagne
RUN pip --no-cache-dir install git+git://github.com/Lasagne/Lasagne.git@${LASAGNE_VERSION}

# Expose Ports for TensorBoard (6006), Ipython (8888)
EXPOSE 6006 8888

WORKDIR "/root"
CMD ["/bin/bash"]

RUN pip install git+git://github.com/fchollet/keras.git --upgrade
RUN pip install git+git://github.com/Lasagne/Lasagne.git --upgrade

COPY keras.json /root/.keras/keras.json

# for plotting NN diagram (from keras.utils.visualize_util import plot) https://github.com/fchollet/keras/issues/3210
RUN apt-get update && \
	apt-get install graphviz -y && \
	pip install pydot-ng

RUN apt-add-repository multiverse && apt-get update 
RUN apt-get install unrar -y
RUN apt-get install imagemagick php5-imagick -y

# ros indigo
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' && \
	apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 && \
	apt-get update && \
	apt-get install ros-indigo-desktop-full -y
RUN rosdep init && rosdep update
RUN echo "source /opt/ros/indigo/setup.bash" >> ~/.bashrc 
# for the curious http://stackoverflow.com/questions/20635472/using-the-run-instruction-in-a-dockerfile-with-source-does-not-work
RUN /bin/bash -c "source ~/.bashrc"
RUN apt-get install python-rosinstall -y

RUN pip install catkin_tools click arrow msgpack-python msgpack_numpy sarge colorcorrect treedict
RUN git clone https://github.com/dimatura/spath.py && cd spath.py && python setup.py install
RUN git clone git://github.com/lisa-lab/pylearn2.git && cd pylearn2 && python setup.py develop
RUN pip install scikit-image --upgrade # works with 0.12.3

WORKDIR "/root"
CMD ["/bin/bash"]

